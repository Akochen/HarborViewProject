@using WebApplication3.HelperClasses;
@model AddSectionForm

@{
    ViewBag.Title = "AddSectionForm";
    Layout = "~/Views/Shared/_LayoutAdministrator.cshtml";
    //List all selectable courses
    List<SelectListItem> courseList = new List<SelectListItem>();
    courseList.Add(new SelectListItem { Value = "", Text = "---Course---" });
    foreach (var v in Model.courses)
    {
        courseList.Add(new SelectListItem { Value = v.id, Text = v.courseName });
    }
    //List all buildings
    List<SelectListItem> buildingList = new List<SelectListItem>();
    buildingList.Add(new SelectListItem { Value = "", Text = "---Building---" });
    foreach (var v in Model.buildings)
    {
        buildingList.Add(new SelectListItem { Value = v.buildingId, Text = v.buildingName });
    }
    //Create all room selectors
    Dictionary<String, List<SelectListItem>> roomLists = new Dictionary<string, List<SelectListItem>>();
    foreach (var b in Model.buildings)
    {
        //Add rooms to the proper room selectors
        List<SelectListItem> rooms = new List<SelectListItem>();
        foreach (var r in Model.locations)
        {
            if (b.buildingId == r.buildingId)
            {
                rooms.Add(new SelectListItem { Value = r.roomId, Text = r.roomName });
            }
        }
        roomLists.Add(b.buildingId, rooms);
    }
    //Create list of selectable types
    List<SelectListItem> types = new List<SelectListItem>();
    types.Add(new SelectListItem { Value = "Lecture", Text = "Lecture" });
    types.Add(new SelectListItem { Value = "Online", Text = "Online" });
    types.Add(new SelectListItem { Value = "Hybrid", Text = "Hybrid" });
    //Create list of selectable capacities
    List<SelectListItem> capacity = new List<SelectListItem>();
    for (int i = 10; i < 33; i += 5)
    {
        capacity.Add(new SelectListItem { Value = i.ToString(), Text = i + "" });
    }
    //Create list of credits
    List<SelectListItem> credits = new List<SelectListItem>();
    credits.Add(new SelectListItem { Value = "1", Text = "1" });
    credits.Add(new SelectListItem { Value = "2", Text = "2" });
    credits.Add(new SelectListItem { Value = "3", Text = "3" });
    credits.Add(new SelectListItem { Value = "4", Text = "4" });
    //Create semester selector
    List<SelectListItem> semesters = new List<SelectListItem>();
    semesters.Add(new SelectListItem { Value = "", Text = "Semester" });
    foreach (var v in Model.semsters)
    {
        semesters.Add(new SelectListItem { Value = v, Text = v });
    }
    //Create year selector
    List<SelectListItem> years = new List<SelectListItem>();
    years.Add(new SelectListItem { Value = "", Text = "Year" });
    foreach (var v in Model.years)
    {
        years.Add(new SelectListItem { Value = v, Text = v });
    }
}

<link rel="stylesheet" href="~/Content/Background.css" />
<form method="post">
    <table class="dataTable" id="lines">

        <tr>
            <td><strong>Course Name:</strong> </td>
            <td>
                @Html.DropDownList("courseID", courseList, null, new { required = "required" })
            </td>
        </tr>
        <tr>
            <td><strong>Building:</strong> </td>
            <td>
                @Html.DropDownList("buildingID", buildingList, null, new { onchange = "showSelected()", required = "required", @id = "buildingSelector" })
            </td>
        </tr>
        <tr>
            <td><strong>Room Number:</strong> </td>
            <td>
                @foreach (var b in Model.buildings)
                {
                    @Html.DropDownList(b.buildingId, roomLists[b.buildingId], null, new { @id = b.buildingId, required = "required" })
                }
            </td>
        </tr>
        <tr>
            <td><strong>Semester:</strong> </td>
            <td> @Html.DropDownList("Semester", semesters, new { required = "required" }) </td>
        </tr>
        <tr>
            <td><strong>Year:</strong> </td>
            <td> @Html.DropDownList("Year", years, new { required = "required" }) </td>
        </tr>
        <tr>
            <td><strong>Type of Course:</strong> </td>
            <td>
                @Html.DropDownList("type", types, new { required = "required" })
            </td>
        </tr>
        <tr>
            <td><strong>Student Capacity:</strong> </td>
            <td>
                @Html.DropDownList("capacity", capacity, new { required = "required" })
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <input type="submit" value="Add" onclick="return validateForm()" />
            </td>
        </tr>
    </table>
</form>
<script>
    hideAll();
    showSelected();
    function showSelected() {
        var building = document.getElementById("buildingSelector");
        hideAll();
        if (building.value != "") {
            document.getElementById(building.value).style.display = "initial";
        }
    }

    function hideAll() {
        @foreach (var b in Model.buildings)
        {
            @Html.Raw("document.getElementById(\"" + b.buildingId + "\").style.display = \"none\"; \n")
        }
    }
</script>

@{
    if (IsPost)
    {
        DateTime date = Convert.ToDateTime(Request.Form["time"]);
        date = date.AddHours((double)4/(double)3);
        int c = 1;
        Response.Redirect(Url.Action("AddSection", "Administrator", new { courseId = Request.Form["courseID"], buildingId = Request.Form["buildingID"]
            , roomId = Request.Form[Request.Form["buildingID"]], semester = Request.Form["Semester"], year = Request.Form["Year"], type = Request["type"]
            , capacity = Request.Form["Capacity"]
        }));
        //, d1 = Request.Form["d1"], d2 = Request.Form["d2"], d3 = Request.Form["d3"] , startTime = Request.Form["time"]
    }
}

